apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "terraform-cloud-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "terraform-cloud-operator.labels" . | nindent 4 }}
    control-plane: {{ .Release.Name }}-controller-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "terraform-cloud-operator.selectorLabels" . | nindent 6 }}
      control-plane: {{ .Release.Name }}-controller-manager
  template:
    metadata:
      labels:
        {{- include "terraform-cloud-operator.selectorLabels" . | nindent 8 }}
        control-plane: {{ .Release.Name }}-controller-manager
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          args:
          - --config=controller_manager_config.yaml
          - --sync-period={{ .Values.operator.syncPeriod }}
          - --agent-pool-workers={{ .Values.controllers.agentPool.workers }}
          - --module-workers={{ .Values.controllers.module.workers }}
          - --workspace-workers={{ .Values.controllers.workspace.workers }}
          {{- range .Values.operator.watchedNamespaces }}
          - --namespace={{ . }}
          {{- end }}
          env:
          {{- if .Values.operator.tfe_address -}}
          - name: TFE_ADDRESS
            value: {{ .Values.operator.tfe_address }}
          {{- end -}}
          command:
          - /manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /controller_manager_config.yaml
            name: manager-config
            subPath: controller_manager_config.yaml
        - name: kube-rbac-proxy
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
          imagePullPolicy: IfNotPresent
          args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=0
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: {{ .Release.Name }}-controller-manager
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: {{ .Release.Name }}-manager-config
        name: manager-config
